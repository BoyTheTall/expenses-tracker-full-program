# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login_detailsUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
sys.path.append("Backend")
from PyQt5 import QtCore, QtGui, QtWidgets, uic
import backend.authenticator as authenticator
import ui_files.messages as messages

class Login_DetailsUI(QtWidgets.QMainWindow):
    g_username = None
    def __init__(self):
        super(Login_DetailsUI, self).__init__()
        uic.loadUi('login detailsUI.ui', self)
        self.setWindowIcon(QtGui.QIcon("icon.png"))
        self.show()
        
        
        #stuff added by me 
        self.getDetails()
        self.pwfPassword.setEchoMode(QtWidgets.QLineEdit.Password)
        self.btnUpdate.clicked.connect(self.updateUserDetails)

    def updateUserDetails(self):
        username = self.pwfUsername.text()
        username_confirmation = self.pwfConfirmUsername.text()
        password = self.pwfPassword.text()
        password_confirmation =  self.pwfConfirmPassword.text()
                
        if username == username_confirmation and password == password_confirmation and username is not None and password is not None:
            authenticator.update_user(old_username= self.g_username, new_password=password, new_username=username)
            f = open("current session.txt", 'w')
            f.write(username)
            f.close()
            self.g_username = username
            messages.display_message("the Log in details were updated successfully \nMake sure to remember them", messages.INFO_MSG)
            
        else:
            messages.display_message("Check if all the fields have been filled with the correct information", messages.ERROR_MSG)
            
    def getDetails(self):
        f = open("current session.txt", 'r')
        self.g_username = f.read()#the username of the currently logged in person. I know I probably should not be doing it like this but this is what I can do for now
        f.close()
        username, password = authenticator.getUserDetails(self.g_username)
        self.pwfUsername.setText(username)
        self.pwfPassword.setText(password)
        
def launch():
    import sys
    app = QtWidgets.QApplication(sys.argv)
    app.setStyle("Fusion")
    window = Login_DetailsUI()
    app.exec_()

if __name__ == "__main__":
    launch()